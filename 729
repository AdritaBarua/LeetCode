##O(log n)
class MyCalendar(object):

    def __init__(self):
        self.bookings = []

    def find_insert_position(self, interval):
        """Return the index where 'interval' should be inserted."""
        start, end = interval
        lo, hi = 0, len(self.bookings)
        while lo < hi:
            mid = (lo + hi) // 2
            if self.bookings[mid] < interval:
                lo = mid + 1
            else:
                hi = mid
        return lo  # same as bisect_left

    def book(self, startTime, endTime):
        # Find insertion index using custom binary search
        i = self.find_insert_position((startTime, endTime))

        # Check previous booking (i-1)
        if i > 0 and self.bookings[i-1][1] > startTime:
            return False

        # Check next booking (i)
        if i < len(self.bookings) and self.bookings[i][0] < endTime:
            return False

        # Safe â†’ insert manually
        self.bookings.insert(i, (startTime, endTime))
        return True
