## Time Complexity: O(n + m) (traverse all nodes)
## Space Complexity: O(n + m) (recursive call stack)

def mergeTwoLists(self, list1, list2):
        if list1 is None: 
            return list2
        if list2 is None: 
            return list1

        if list1.val< list2.val:
            list1.next = self.mergeTwoLists(list1.next, list2)
            return list1
        else:
            list2.next = self.mergeTwoLists(list1, list2.next)
            return list2
    
## Time Complexity: O(n + m)
## Space Complexity: O(1) (just pointers, no recursion)
def mergeTwoLists(self, list1, list2):
        dummy = ListNode(-1)  # placeholder node
        current = dummy

        while list1 and list2:
            if list1.val < list2.val:
                current.next = list1
                list1 = list1.next
            else:
                current.next = list2
                list2 = list2.next
            current = current.next

        # Attach the remainder
        current.next = list1 if list1 else list2

        return dummy.next
