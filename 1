#O(n)

def two_sum(nums, target):
    # Dictionary to store value -> index mapping
    num_map = {}
    
    for i, num in enumerate(nums):
        # Calculate the complement
        complement = target - num
        
        # Check if the complement is already in the map
        if complement in num_map:
            return [num_map[complement], i]
        
        # Store the current number with its index
        num_map[num] = i

# Example usage:
nums = [2, 7, 11, 15]
target = 9
print(two_sum(nums, target))  # Output: [0, 1]
