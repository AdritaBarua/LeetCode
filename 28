## O(mÂ·n)

def strStr(self, haystack, needle):
    m, n = len(haystack), len(needle)

    # Edge case: empty needle should return 0
    if n == 0:
        return 0

    # Traverse through haystack
    for i in range(m - n + 1):  # only up to where needle can fit
        if haystack[i] == needle[0]:  # first char matches
            if haystack[i : i + n] == needle:  # check substring
                return i  # found match
    
    return -1

